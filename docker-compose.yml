# This docker-compose.yml file is intended for development support. It
# is *not* meant for production.
# https://www.keycloak.org/server/reverseproxy

version: '3.9'
name: people2023

services:
  atela:
    build: git@github.com:epfl-si/atela-backend.git
    environment:
      - MOCK_ORACLE=1
      - SITE_URL=atela.${DOMAIN:-dev.jkldsa.com}
    profiles:
      - atela
    working_dir: /var/www/vhosts/app/private/tests

  # Keycloak is an OpenID-Connect IdP (Identity Provider) that is easy
  # to set up. It mocks out that feature in the Rails application,
  # allowing testing with arbitrary users and groups. See further
  # details on the startup sequence of Keycloak (and the
  # --import-realm flag) in ./keycloak/README.md
  keycloak:
    image: quay.io/keycloak/keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: mariadb
      KC_DB_URL: jdbc:mariadb://mariadb:3306/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: mariadb
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # KC_HOSTNAME: ${KC_HOSTNAME:-http://localhost}
      # KC_HOSTNAME: keycloak.epfl.cz
      # KC_HOSTNAME_PORT: 443
      # KC_HTTP_ENABLED: true
    ports:
      # Since the Keycloak password is easy to guess, opening up this
      # port further than localhost is *not* recommended.
      - "${KCPORTEXT:-127.0.0.1:8080:}8080"
    labels:
      - traefik.docker.network=traefik
      - traefik.http.services.keycloak.loadbalancer.server.port=${KCPORT:-8080}
      - traefik.http.routers.keycloak.rule=Host("keycloak.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.keycloak.tls=true
    volumes:
      - ./keycloak/import_${KCREALM:-default}:/opt/keycloak/data/import
    networks:
      - traefik
      - default
    profiles:
      - kc

  # MariaDB is used by Keycloak for persistence. The Rails application
  # itself uses sqlite in development (which unfortunately, is not an
  # option for Keycloak at the moment).
  mariadb:
    image: mariadb:latest
    environment:
      MARIADB_USER: keycloak
      MARIADB_PASSWORD: mariadb
      MARIADB_ROOT_PASSWORD: mariadb
    volumes:
      - mariadb:/var/lib/mysql
      - ./db/initdb_dev.d:/docker-entrypoint-initdb.d
    networks:
      - default

  cache:
    image: redis:latest
    command:
      - --maxmemory 32mb
    networks:
      - default

  webapp:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - RAILS_ENV=development
        - APP_HOME=/srv/app
        - LIB_HOME=/srv/lib
    env_file: .env

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=mariadb
      - PMA_ABSOLUTE_URI=https://peopledb.${DOMAIN:-dev.jkldsa.com}
      - PMA_ARBITRARY=1
    # volumes:
    #   - ./storage/phpmyadmin_sessions:/sessions
    labels:
      - traefik.docker.network=traefik
      - traefik.http.routers.peodb2.rule=Host("peopledb.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.peodb2.tls=true
      - traefik.http.services.peodb2.loadbalancer.server.port=80
    networks:
      - traefik
      - default

  # TODO: add also firefox as an option (see https://nicolasiensen.github.io/2022-03-11-running-rails-system-tests-with-docker/)
  # https://github.com/SeleniumHQ/docker-selenium
  selenium:
    image: selenium/standalone-chrome:112.0
    shm_size: '2gb'
    profiles:
      - test
    labels:
      - traefik.docker.network=traefik
      - traefik.http.services.peoselen.loadbalancer.server.port=7900
      - traefik.http.routers.peoselen.rule=Host("selenium.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.peoselen.tls=true
    networks:
      - traefik
      - default

volumes:
  mariadb: {}
  filecache: {}
  storage: {}
networks:
  traefik:
    external: true
