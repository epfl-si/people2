---

- name: Deploy the main people webapp
  when: people.app_replicas | int > 0
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ kid.app }}"
        namespace: "{{ namespace }}"
      spec:
        replicas: "{{ people.app_replicas | int }}"
        selector:
          matchLabels:
            kid: "{{ kid.app }}"
        template:
          metadata:
            annotations:
              config_signature: "{{ people_config_signature }} {{ people_secrets_signature }}"
            labels:
              kid: "{{ kid.app }}"
              version: "{{ people_version }}"
          spec:
            serviceAccountName: puller
            containers:
              - name: people
                image: "{{ people.image }}"
                command: ["./bin/thrust", "./bin/rails", "server"]
                imagePullPolicy: Always
                resources: "{{ helpers.resources }}"
                ports:
                  - containerPort: 8080
                  - containerPort: 9394
                    name: metrics
                envFrom:
                  - configMapRef:
                      name: "{{ kid.app_config }}"
                  - secretRef:
                      name: "{{ kid.app_secrets }}"
                env:
                  - name: ENABLE_METRICS
                    value: "true"
                    # config for thruster (https://github.com/basecamp/thruster/)
                  - name: HTTP_PORT
                    value: "8080"
                  - name: TARGET_PORT
                    value: "3000"
                  # - name: THRUST_DEBUG
                  #   value: "1"
                volumeMounts:
                  - name: "{{ kid.app }}-nfs"
                    mountPath: /rails/storage
                    subPath: "{{ RUNENV }}_storage"
                  - name: "{{ kid.app }}-nfs"
                    mountPath: /trash
                    subPath: "{{ RUNENV }}_trash"
                  - name: "{{ kid.app }}-tmp"
                    mountPath: /rails/tmp
            volumes:
              - name: "{{ kid.app }}-tmp"
                emptyDir:
                  sizeLimit: 100Mi
              - name: "{{ kid.app }}-nfs"
                persistentVolumeClaim:
                  # claim name MUST NOT be changed (see storage.yml for details)
                  claimName: people-storage

# Job supervisor could be a container in the app pod.
# I keep it separate because we may need fewer replicas.
- name: Deploy the job supervisor
  when: people.job_replicas | int > 0
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ kid.jobs }}"
        namespace: "{{ namespace }}"
      spec:
        replicas: "{{ people.job_replicas | int }}"
        selector:
          matchLabels:
            kid: "{{ kid.jobs }}"
        template:
          metadata:
            annotations:
              config_signature: "{{ people_config_signature }} {{ people_secrets_signature }}"
            labels:
              kid: "{{ kid.jobs }}"
              version: "{{ people_version }}"
          spec:
            serviceAccountName: puller
            containers:
              - name: jobs
                image: "{{ people.image }}"
                command: ["./bin/jobs"]
                imagePullPolicy: Always
                resources: "{{ helpers.resources }}"
                envFrom:
                  - configMapRef:
                      name: "{{ kid.app_config }}"
                  - secretRef:
                      name: "{{ kid.app_secrets }}"
                volumeMounts:
                  - name: "{{ kid.jobs }}-nfs"
                    mountPath: /rails/storage
                    subPath: "{{ RUNENV }}_storage"
                  - name: "{{ kid.jobs }}-tmp"
                    mountPath: /rails/tmp
            volumes:
              - name: "{{ kid.jobs }}-tmp"
                emptyDir:
                  sizeLimit: 100Mi
              - name: "{{ kid.jobs }}-nfs"
                persistentVolumeClaim:
                  # claim name MUST NOT be changed (see storage.yml for details)
                  claimName: people-storage

- name: Deploy the legacy app proxy (or static scraped version)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ kid.legacy }}"
        namespace: "{{ namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            kid: "{{ kid.legacy }}"
        template:
          metadata:
            annotations:
              config_signature: "{{ people_config_signature }} {{ people_secrets_signature }}"
            labels:
              kid: "{{ kid.legacy }}"
          spec:
            serviceAccountName: puller
            containers:
              - name: legacy
                image: "{{ legacy.image }}"
                imagePullPolicy: Always
                resources: "{{ helpers.resources }}"
                ports:
                  - containerPort: 8181
                volumeMounts:
                  - name: "{{ kid.legacy }}-cache"
                    mountPath: /tmp/cache
            volumes:
              # TODO: we'll have to provide a persistent storage if we decide to serve static scraped versions
              - name: "{{ kid.legacy }}-cache"
                emptyDir:
                  sizeLimit: 5Gi
