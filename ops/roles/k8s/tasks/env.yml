- debug:
    var: people_config

- name: Ensure Kubernetes Secret with application DB/API credentials
  # notify:
  #   - restart webapp
  #   - restart jobs
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ kid.app_secrets }}"
        namespace: "{{ namespace }}"
      type: Opaque
      data: "{{ people_secrets }}"

- name: Create Kubernetes ConfigMap with application environment variables
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ kid.app_config }}"
        namespace: "{{ namespace }}"
      data: "{{ people_config }}"

- name: Create Kubernetes Secret for mariadb server
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ kid.db_secrets }}"
        namespace: "{{ namespace }}"
      type: Opaque
      data:
        "ROOT_PASSWORD": "{{ _secrets.db.work.root_password | b64encode }}"
        work_username: "{{ _secrets.db.work.username | b64encode }}"
        work_password: "{{ _secrets.db.work.password | b64encode }}"

# - name: Create Kubernetes Secret with admin DB credentials
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: people-admin-secrets
#         namespace: "{{ namespace }}"
#       type: Opaque
#       data:
#         "DB_MAIN_HOST": "{{ _secrets.db.main_adm.server  | b64encode}}"
#         "DB_MAIN_PORT": "{{ _secrets.db.main_adm.port | b64encode }}"
#         "DB_MAIN_NAME": "{{ _secrets.db.main_adm.dbname  | b64encode}}"
#         "DB_MAIN_USER": "{{ _secrets.db.main_adm.username  | b64encode}}"
#         "DB_MAIN_PASSWORD": "{{ _secrets.db.main_adm.password  | b64encode}}"

#         "DB_QUEUE_HOST": "{{ _secrets.db.queue.server  | b64encode}}"
#         "DB_QUEUE_PORT": "{{ _secrets.db.queue.port | b64encode }}"
#         "DB_QUEUE_NAME": "{{ _secrets.db.queue.dbname  | b64encode}}"
#         "DB_QUEUE_USER": "{{ _secrets.db.queue.username  | b64encode}}"
#         "DB_QUEUE_PASSWORD": "{{ _secrets.db.queue.password  | b64encode}}"

#         "DB_WORK_HOST": "{{ _secrets.db.work.server  | b64encode}}"
#         "DB_WORK_PORT": "{{ _secrets.db.work.port | b64encode }}"
#         "DB_WORK_NAME": "{{ _secrets.db.work.dbname  | b64encode}}"
#         "DB_WORK_USER": "{{ _secrets.db.work.username  | b64encode}}"
#         "DB_WORK_PASSWORD": "{{ _secrets.db.work.password  | b64encode}}"

#         "DB_LEGACY_HOST": "{{ _secrets.db.legacy.server  | b64encode}}"
#         "DB_LEGACY_PORT": "{{ _secrets.db.legacy.port | b64encode }}"
#         "DB_LEGACY_NAME": "{{ _secrets.db.legacy.dbname  | b64encode}}"
#         "DB_LEGACY_USER": "{{ _secrets.db.legacy.username  | b64encode}}"
#         "DB_LEGACY_PASSWORD": "{{ _secrets.db.legacy.password  | b64encode}}"
