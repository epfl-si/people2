---

- name: Ensure PVC for redis
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      # TODO: reclaim policy !!!
      metadata:
        name: "{{ kid.redis }}"
        namespace: "{{ namespace }}"
      spec:
        accessModes: [ReadWriteMany]
        resources:
          requests:
            storage: "{{ redis.disk }}Gi"
        storageClassName: ocs-storagecluster-cephfs
        volumeMode: Filesystem

- name: Ensure PVC for legacy cache
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      # TODO: reclaim policy !!!
      metadata:
        name: "{{ kid.legacy_cache }}"
        namespace: "{{ namespace }}"
      spec:
        accessModes: [ReadWriteMany]
        resources:
          requests:
            storage: "{{ legacy.cache_size }}"
        storageClassName: ocs-storagecluster-cephfs
        volumeMode: Filesystem

- name: Ensure PVC for legacy data (legacy pages scrapped in advance)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      # TODO: reclaim policy !!!
      metadata:
        name: "{{ kid.legacy_data }}"
        namespace: "{{ namespace }}"
      spec:
        accessModes: [ReadWriteMany]
        resources:
          requests:
            storage: "{{ legacy.data_size }}"
        storageClassName: ocs-storagecluster-cephfs
        volumeMode: Filesystem

# NFS PV storage is created and mounted to cluster nodes by cluster admin.
# Share details are visible in the XAAS portal as people_shared_nfs.
# With the same NFS share we can create as many mounts as we need pointing to
# subdirectories. Only, subdirs must be created from Giovanni's workstation
# that can mount the share with root access. Usage in openshit:
#
# In deployment configuration:
#  volumes:
#    - name: storage-volume
#      persistentVolumeClaim:
#        claimName: people-storage
#  and within the containers specification:
#  containers:
#    - name: people
#      ...
#      volumeMounts:
#    -   name: storage-volume                      # same volume name above
#        mountPath: /rails/storage
#        subPath: prod_storage

- name: Create storage PVC for application storage (uploaded files)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "{{ kid.uploads }}"
        namespace: "{{ namespace }}"
      spec:
        accessModes: [ReadWriteMany]
        resources:
          requests:
            storage: 1Mi
        storageClassName: ""
        volumeMode: Filesystem

# # Storage for mariadb is directly created by the operator
# - name: Ensure PVC for mariadb
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: PersistentVolumeClaim
#       metadata:
#         name: people-mariadb
#         namespace: "{{ namespace }}"
#       spec:
#         accessModes: [ReadWriteMany]
#         resources:
#           requests:
#             storage: "{{ mariadb.disk }}Gi"
#         storageClassName: ocs-storagecluster-cephfs
#         volumeMode: Filesystem
