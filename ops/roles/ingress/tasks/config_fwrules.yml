
# - name: Simple A record (IPV4 address) lookup for example.com
#   ansible.builtin.debug:
#     msg: "{{ ansible_host }}"
#     # msg: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}"
#     # msg: "{{ lookup('community.general.dig', ansible_host ~ '.', qtype='A') }}"
#     # var: hostvars #hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2]
#     # msg: "{{ lookup('ansible.builtin.pipe', 'host ' ~ ansible_host ) }}"
#   tags:
#     - debug

- name: Ensure firewall allows traffic directed to http/https
  ansible.posix.firewalld:
    permanent: false
    port: "{{ item }}/tcp"
    state: enabled
    zone: public
  with_items:
    - 443
    - 80

- name: Ensure forward of standard https ports when necessary
  ansible.posix.firewalld:
    permanent: false
    port_forward:
      -
        proto: tcp
        port: 443
        toport: "{{ ports.traefik_https }}"
    state: "{{ ingress.with_ipforward | ternary('enabled', 'disabled') }}"
    zone: public
  when:
    - ports.traefik_https != 443

- name: Ensure forward of standard http ports when necessary
  ansible.posix.firewalld:
    permanent: false
    port_forward:
      -
        proto: tcp
        port: 80
        toport: "{{ ports.traefik_http }}"
    state: "{{ ingress.with_ipforward | ternary('enabled', 'disabled') }}"
    zone: public
  when:
    - ports.traefik_https != 80

# For some reason this one which should be equivalent to the next one does not work
# - name: Ensure forward of standard http/https ports
#   ansible.posix.firewalld:
#     permanent: false
#     rich_rule: 'rule family="ipv4" destination address={{ ansible_ip }} forward-port port={{ 80 }} protocol=tcp to-port={{ ports.traefik_http }}'
#     state: enabled
#     zone: public
#   when:
#     - ports.traefik_https != 80

# - name: Ensure forward of standard http/https ports
#   ansible.posix.firewalld:
#     permanent: false
#     rich_rule: 'rule family="ipv4" destination address={{ ansible_ip }} forward-port port={{ 443 }} protocol=tcp to-port={{ ports.traefik_https }}'
#     state: enabled
#     zone: public
#   when:
#     - ports.traefik_https != 443

- name: Ensure forward of standard http/https ports
  ansible.builtin.iptables:
    chain: OUTPUT
    table: nat
    protocol: tcp
    destination: "{{ ansible_ip }}"
    destination_port: 443
    jump: REDIRECT
    to_ports: "{{ ports.traefik_https }}"
    state: "{{ ingress.with_ipforward | ternary('present', 'absent') }}"
    comment: forward traefik to web ports to traefik even when src is localhost
  when:
    - ports.traefik_https != 443

- name: Ensure forward of standard http/https ports
  ansible.builtin.iptables:
    chain: OUTPUT
    table: nat
    protocol: tcp
    destination: "{{ ansible_ip }}"
    destination_port: 80
    jump: REDIRECT
    to_ports: "{{ ports.traefik_http }}"
    state: "{{ ingress.with_ipforward | ternary('present', 'absent') }}"
    comment: forward traefik to web ports to traefik even when src is localhost
  when:
    - ports.traefik_https != 80
