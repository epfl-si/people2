// Sassy

// This is the main stylesheet for the backoffice applications (profile edit page)
// It tries to inherit definitions from elements. Therefore, it uses the elements
// version compiled from source and embeds it here.
// This enables generating child configurations by extending element's. E.g.
// input {
//   @extend .form-control;
// }
// where the class form-control is defined in elements.
// We also import (a slightly patched version of) bootstrap-variables so we can
// recycle definitions.

@use "sass:map";

@import "elements/elements";
@import "elements/vendors";

// helper function used in bootstrap-variables (but undefined therein)
@function theme-color($name) {
  @return map.get($theme-colors, $name);
}

@import "elements/bootstrap-variables";

@import "fonts";
// note that normally trix is included in actiontext but not when imported
// into a scss. Therefore, we have to declare it explicitly.
@import "trix";
@import "actiontext";
@import "common";
@import "cropperjs";

// ------------------------------------------------------------------ extra vars
$font-size-xxs: 0.6rem;

@function spacer($name) {
  @return map.get($spacers, $name);
}

.nav-row {
  margin-right: 2em;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-around;
  gap: 1em;
}
// ---------------------------------------------------------------------- styles

#flash-messages {
  position: fixed;
  z-index: 100;
  bottom: 1rem;
  right: 1rem;
}

// ---- turbo replacement animation
.turbo-replace-enter {
  animation: fade-in 0.25s ease-out;
}

.turbo-replace-exit {
  animation: fade-out 0.25s ease-out;
}

.user_translation_missing {
  color: $canard;
}

.translation_missing {
  color: #00fff9;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

// ----

span.visibility {
  @extend .tag;
  @extend .tag-sm;
  @extend .tag-primary;
  font-size: $font-size-xxs;
  margin-top: 0.1em;

  svg {
    margin-right: spacer(1);
  }
}

.audience-selector {
  display: inline-block;
  margin-right: spacer(4);
}

.custom-checkbox {
  padding-top: 1ex;
}

#pictures_section {
  min-height: 400px;
  padding: 1em;
}

.edit_picture {
  border: 1px solid #c1c1c1;
  padding: 1em;
}

.add-buttons {
  .btn-push {
    position: relative;
    border: none;
    background: transparent;
    padding: 0;
    cursor: pointer;
    outline-offset: 3px;
    transition: filter 200ms;
    user-select: none;
    display: inline-block;
    margin-right: 0.5em;
    font-size: 0.875rem; // ~14px
  }

  .btn-push-shadow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 8px;
    background: hsl(0deg 0% 0% / 0.2);
    transform: translateY(1px);
    transition: transform 400ms cubic-bezier(.3, .7, .4, 1);
  }

  .btn-push-edge {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 8px;
    background: linear-gradient(
      to left,
      rgb(128, 0, 0) 0%,
      rgb(255, 0, 0) 8%,
      rgb(255, 0, 0) 92%,
      rgb(128, 0, 0) 100%
    );
  }

  .btn-push-front {
    display: inline-flex;
    align-items: center;
    gap: 0.4em;
    position: relative;
    padding: 6px 16px;
    border-radius: 8px;
    color: white;
    background: rgb(255, 0, 0);
    font-size: 0.875rem;
    font-weight: 500;
    transform: translateY(-2px);
    transition: transform 400ms cubic-bezier(.3, .7, .4, 1);

    svg.icon {
      width: 1.80em;
      height: 1.80em;
    }
  }

  .btn-push:hover {
    filter: brightness(108%);
  }

  .btn-push:hover .btn-push-front {
    transform: translateY(-3px);
    transition: transform 200ms cubic-bezier(.3, .7, .4, 1.5);
  }

  .btn-push:active .btn-push-front {
    transform: translateY(0);
    transition: transform 34ms;
  }

  .btn-push:hover .btn-push-shadow {
    transform: translateY(2px);
    transition: transform 200ms cubic-bezier(.3, .7, .4, 1.5);
  }

  .btn-push:active .btn-push-shadow {
    transform: translateY(0.5px);
    transition: transform 34ms;
  }

  .btn-push:focus:not(:focus-visible) {
    outline: none;
  }
}

.rpush {
  display: flex;
  justify-content: space-between;
}

summary .rpush {
  display: inline-flex;
  justify-content: space-between;
  width: calc(100% - 25px);
}

.definition-list-grid-large {
  grid-template-columns: minmax(min-content, 30%) 1fr;
}

#profile_field_inclusivity {
  margin-bottom: 0 !important;
  padding-bottom: 0 !important;
  border-bottom: none !important;
}

#profile_field_nationality,
#profile_field_expertise,
#profile_field_personal_web_url,
#profile_field_personal_phone {
  dl.definition-list {
    margin: 0 !important;
    padding: 0 !important;
    border: none !important;
  }
}

// ---------------------------------------------------------------------- form
// ---- Forms for editing instances of the models depending on profile

.instaform {
  background-color: #fff;
  padding: 0.5rem;

  .form-group {
    display: flex;
    flex-direction: column;

    label {
      margin-bottom: 0.25rem;
      font-size: 0.75em;
    }

    input[type="number"] {
      display: inline-block;
      width: min-content;
    }
  }

  .field_with_errors {
    .form-control {
      border-color: #ff0000;
    }
  }

  .form-row-group {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: 2em;
  }

  .form-actions {
    display: flex;
    justify-content: center;
    padding: 1rem;
    border-top: dotted $gray-600 1px;
    gap: 2em;

    .btn-cancel {
      @extend .btn;
      @extend .btn-secondary;
      @extend .btn-sm;
    }

    // TODO: this does not fully work: button takes transparent instead of red bg
    .btn-submit,
    .btn-confirm {
      @extend .btn;
      @extend .btn-primary;
      @extend .btn-sm;
    }
  }

  // ----------------------------------------------------------- fix trix editor
  .rich_text_input {
    padding: 0.5rem;
    background-color: white;
    border: 1px #707070 solid;
  }
}

// ---------------------------------------------------------------- image upload
.card-img-top img {
  height: 100%;
  width: 100%;
  object-fit: cover; //contain;
}

.upload {
  border: 0px;
}

// ----
.upload .btn {
  margin-bottom: 0.5rem;
}

// ----------------------------------------------------------- sortable feedback
.sortable-mv {
  display: inline-block;
}

.sortable-ok {
  display: none;
  color: #7ed321;
}

.sortable-ko {
  display: none;
  color: #ff0000;
}

.sortable-done {
  .sortable-mv {
    display: none;
  }

  .sortable-ok {
    display: inline-block;
  }

  .sortable-ko {
    display: none;
  }
}

.sortable-error {
  .sortable-mv {
    display: none;
  }

  .sortable-ok {
    display: none;
  }

  .sortable-ko {
    display: inline-block;
  }
}

// -------------------------------------------------------------------- pictures
.card-img-top {
  height: 140px;
}

// ----------------------------------------------------------------------- boxes
details {
  border: 1px solid #ddd;
  border-radius: 8px;
  // padding: 20px;
  background-color: #f9f9f9;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

  summary {
    // height: 4em;
    margin-bottom: 0.5lh;

    h2 {
      margin-bottom: 0;
    }
  }
}

// ------------------------------------------------- translation switching magic
#tr_switchable {

  .tr_target_en,
  .tr_target_fr,
  .tr_target_it,
  .tr_target_fr {
    // visibility: hidden;
    display: none;
  }
}

#tr_switchable.tr_enable_en {
  .tr_target_en {
    display: block;
  }
}

#tr_switchable.tr_enable_fr {
  .tr_target_fr {
    display: block;
  }
}

#tr_switchable.tr_enable_it {
  .tr_target_it {
    display: block;
  }
}

#tr_switchable.tr_enable_de {
  .tr_target_de {
    display: block;
  }
}


// --------------------------------------------------------- common editor modal
#multilang_editor {
  padding: 0.2em 1em 0.4em 1em;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-end;
  gap: 0.5em 0.5em;
  h5 {
    margin-bottom: 0;
  }
}

#editor_content,#help_content {
  padding: 10px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 50vw;
  min-width: 600px;
  max-height: 70vh;
  overflow: scroll;
  border-radius: 0.5em;
  background-color: #fff;
  box-shadow: rgba(0, 0, 0, 0.35) 0px 8px 16px;
  z-index: 110;
}

// ---------------------------------------------------------- visibility popover
.gcpopover {
  display: inline-block;

  .visibility-button {
    display: flex;
    flex-direction: column;
    align-items: flex-center;

    // @extend .tag;
    // @extend .tag-sm;
    // @extend .tag-primary;
    span.label {
      font-size: $font-size-xxs;
    }
  }

  .visibility-container {
    z-index: 100;
    position: absolute;
    // margin-top: -0.8lh;
    background-color: #fff;
    padding: 4px 4px 0 4px;
    border-radius: 5px;

    .visibility-radios {
      border-bottom: 1px solid #d9d9d9;

      label {
        padding: 0.05em 0.2em;
        display: inline-block;
        margin-right: 0;
        cursor: pointer;
        border-bottom: 2px solid #fff;
        border-radius: 15%;

        span {
          transition: transform 0.2s ease-in-out;
        }

        span:hover {
          top: -0.5ex;
          transform: scale(1.25);
          color: var(--red);
        }
      }

      input[type="radio"] {
        display: none;
      }

      input[type="radio"]:checked+label {
        box-shadow: inset 0 0 2px #666;
        border-bottom: 2px solid var(--red);

        span {
          color: var(--red-dark);
        }
      }
    }
  }
}

// ---------------------------------------------------------- giova's visibility
.gc-visibility-container {
  box-sizing: border-box;
  display: inline-flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;

  span.text {
    /* display: none; */
    opacity: 0;
    visibility: hidden;
    font-size: 60%;
    // line-height: 60%;
    // margin-top: -1ex;
    position: relative;
  }

  .visibility-radios {
    margin-left: 1em;
    background-color: #fff;
    padding: 4px 4px 0 4px;
    border-radius: 5px;
    font-size: 120%;

    label {
      padding: 0.05em 0.2em;
      display: inline-block;
      margin-right: 0;
      cursor: pointer;
      border-bottom: 2px solid #fff;
      border-radius: 15%;

      span {
        transition: transform 0.2s ease-in-out;
      }

      span:hover {
        top: -0.5ex;
        transform: scale(1.25);
        color: var(--red);
      }
    }

    input[type="radio"] {
      display: none;
    }

    input[type="radio"]:checked+label {
      box-shadow: inset 0 0 2px #666;
      border-bottom: 2px solid var(--red);

      span {
        color: var(--red-dark);
      }
    }

    input.radio-full:checked+label {
      box-shadow: inset 0 0 2px #ff0000;
      border-bottom-color: #ff0000;
      border-width: 0.20em;

      span {
        color: #000000;
      }
    }

    input.radio-partial:checked+label {
      box-shadow: inset 0 0 2px #ff8400;
      border-width: 0.20em;
      border-bottom-color: #ff8400;

      span {
        color: #000000;
      }
    }

    input.radio-none:checked+label {
      box-shadow: inset 0 0 2px #555d58;
      border-bottom-color: #555d58;
      border-width: 0.20em;

      span {
        color: #000000;
      }
    }
  }
}

/*
.gc-visibility-container:hover {
  span.text {
    opacity: 100;
    visibility: visible;
  }
}
*/

.visibility-tag {
  font-size: x-small;
  height: 4ex;
  .gc-visibility-container {
    display: none;
  }
}

.visibility-tag:hover{
  .gc-visibility-container {
    display: inline-flex;
    z-index: 50;
  }
}

// --------------------------------------------------------------- binary switch

.binary-switch {
  --bs-width: 30px;
  --bs-height: 15px;
  --bs-thumb-size: calc(var(--bs-height) - 4px);
  --bs-thumb-offset: 2px;
  --bs-thumb-translate: calc(var(--bs-width) - var(--bs-thumb-size) - 2 * var(--bs-thumb-offset));

  --bs-color-off: #ccc;
  --bs-color-on: #4caf50;
  --bs-color-thumb: white;

  display: flex;
  flex-direction: column;
  align-items: center;
  .checkbox {
    display: none;
  }

  // here the label is actually the checkbox
  label {
    position: relative;
    width: var(--bs-width);
    height: var(--bs-height);
    background-color: var(--bs-color-off);
    border-radius: calc(var(--bs-height) / 2);
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  label::before {
    content: "";
    position: absolute;
    width: var(--bs-thumb-size);
    height: var(--bs-thumb-size);
    top: var(--bs-thumb-offset);
    left: var(--bs-thumb-offset);
    background-color: var(--bs-color-thumb);
    border-radius: 50%;
    transition: transform 0.3s ease;
  }

  .checkbox:checked + label {
    background-color: var(--bs-color-on);
  }

  .checkbox:checked + label::before {
    transform: translateX(var(--bs-thumb-translate));
  }

  .bslabel {
    margin-top: -2ex;
    font-size: 30%;
    opacity: 0;
    visibility: hidden;
  }
}

.binary-switch:hover {
  .bslabel {
    opacity: 100;
    visibility: visible;
  }
}

// ---------------------------------------------------------------- modal dialog
dialog {
  border: none;
  width: 50%;
}

// ------------------------------------------ no js, rails compatible checkboxes
// https://moderncss.dev/pure-css-custom-checkbox-style/
.form-checkboxes {
  line-height: 1.1;
  display: grid;
  grid-template-columns: 1em 1fr;
  gap: 0.5em;

  label {
    text-align: left;
  }

  input {
    min-width: 0;
  }

  input[type="checkbox"] {
    /* Add if not using autoprefixer */
    -webkit-appearance: none;
    /* Remove most all native input styles */
    appearance: none;
    /* For iOS < 15 */
    background-color: #fff;
    padding: 0;
    /* Not removed via appearance */
    margin: 0;

    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    // border: 0.15em solid currentColor;
    // border-radius: 0.15em;
    transform: translateY(-0.075em);

    display: grid;
    place-content: center;
  }

  input[type="checkbox"]::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    transform: scale(0);
    transform-origin: bottom left;
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em #f00;
    /* Windows High Contrast Mode */
    background-color: #f00;
  }

  input[type="checkbox"]:checked::before {
    transform: scale(1);
    background-color: #f00;
  }
}
//  leonardo's paranoia check 
/* body::before {
  content: "CSS TABS LOADED";
  position: fixed;
  top: 0;
  left: 0;
  background: limegreen;
  color: white;
  padding: 0.5rem;
  z-index: 9999;
  font-size: 14px;
}
*/
