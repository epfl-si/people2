// Sassy

// This is the main stylesheet for the backoffice applications (profile edit page)
// It tries to inherit definitions from elements. Therefore, it uses the elements
// version compiled from source and embeds it here.
// This enables generating child configurations by extending element's. E.g.
// input {
//   @extend .form-control;
// }
// where the class form-control is defined in elements.
// We also import (a slightly patched version of) bootstrap-variables so we can
// recycle definitions.

@use "sass:map";


@import 'elements/elements';
@import 'elements/vendors';

// helper function used in bootstrap-variables (but undefined therein)
@function theme-color($name) {
  @return map.get($theme-colors, $name);
}
@import 'elements/bootstrap-variables';

@import 'fonts';
// note that normally trix is included in actiontext but not when imported
// into a scss. Therefore, we have to declare it explicitly.
@import 'trix';
@import 'actiontext';
@import 'common';

// ------------------------------------------------------------------ extra vars
$font-size-xxs: 0.6rem;

@function spacer($name) {
  @return map.get($spacers, $name);
}

// ---------------------------------------------------------------------- styles

#flash-messages {
  position: fixed;
  z-index: 99;
  top: 1ex;
  left: 300px;
}


// ---- turbo replacement animation
.turbo-replace-enter {
  animation: fade-in 0.25s ease-out;
}

.turbo-replace-exit {
  animation: fade-out 0.25s ease-out;
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}
// ----

span.visibility {
  @extend .tag;
  @extend .tag-sm;
  @extend .tag-primary;
  font-size: $font-size-xxs;
  margin-top: .1em;
  svg {
    margin-right: spacer(1);
  }
}

.audience-selector {
  display: inline-block;
  margin-right: spacer(4);
}

.custom-checkbox {
  padding-top: 1.0ex;
}

#pictures_section {
  min-height: 400px;
}

.btn-cancel {
  @extend .btn;
  @extend .btn-secondary;
  @extend .btn-sm;
}

// TODO: this does not fully work: button takes transparent instead of red bg 
.btn-submit {
  @extend .btn;
  @extend .btn-primary;
  @extend .btn-sm;
}

// ---- Forms for editing instances of the models depending on profile
.instaform {
  padding: spacer(2);

  input {
    @extend .form-control;
  }

  .custom-radio {
    padding-top: 0.5ex;
  }

  input::placeholder {
    color: #707070;
  }

  .form-errors {
    font-size: var(--font-size-sm);
    li {
      color: var(--color-error);
    }
  }

  .form-group {
    display: flex;
    justify-content: flex-start;
  }

  .form-actions {
    display: flex;
    justify-content: center;
    gap: 2em;
    .btn-confirm {
      width: auto;
    }
  }

  .form-control,
  .form-group > label {
    min-width: 15em;
    margin-bottom: 0;
  }
  
  #social_value {
    width: 20em;
  }

  #social_url_prefix {
    flex-shrink: 0;
    color: #6c757d;
  }

  .social-tag-select {
    width: 20em;
  }

  ul > li::before, ol > li::before {
    right: calc(100% + 0.5rem);
  }
  
  // ----------------------------------------------------------- fix trix editor

  .rich_text_input {
    padding: 0.5rem;
    background-color: white;
  }
}

// ----
.upload .btn {
  margin-bottom: 0.5rem;
}

// ------------------------------------------------ animated visibility switch
// example taken from https://freefrontend.com/css-toggle-switches/

.onoff {
  font-size: 70%;
  position: relative;
  // margin-left: -3em;
  margin-top: -2.0ex;

  // position: absolute;
  // right: 6em;
  // margin-top: 0.25lh;

  display: -moz-inline-stack;
  display: inline-block;
  vertical-align: middle;
  *vertical-align: auto;
  zoom: 1;
  *display: inline;
  cursor: pointer;
  width: 4.2em;
  height: 1.1lh;
  line-height: 3.1ex;
}
.onoff label {
  font-size: 80%;
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  cursor: pointer;
  background: #8e8e8e; //var($gray500);
  border-radius: 2px;
  font-weight: bold;
  color: #fff;
  -webkit-transition: background 0.3s, text-indent 0.3s;
  -moz-transition: background 0.3s, text-indent 0.3s;
  -o-transition: background 0.3s, text-indent 0.3s;
  transition: background 0.3s, text-indent 0.3s;
  text-indent: calc(1em + 6px);
  -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.4) inset;
  -moz-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.4) inset;
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.4) inset;
}
.onoff label:after {
  display: block;
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  color: #000; // #fff; //#591717;
  text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.35);
  z-index: 1;
}
.onoff label:before {
  content: '';
  width: 1em;
  height: calc(4ex - 4px);
  border-radius: 3px;
  background: #FFF;
  position: absolute;
  z-index: 2;
  top: 3px;
  left: 3px;
  display: block;
  -webkit-transition: left 0.3s;
  -moz-transition: left 0.3s;
  -o-transition: left 0.3s;
  transition: left 0.3s;
  -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.4);
  -moz-box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.4);
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.4);
}
.onoff input:checked + label {
  // background: #378b2c;
  background: var(--red); //#cd3c3c;
  text-indent: 3px;
}
.onoff input:checked + label:after {
  color: #fff; // #091707;
  text-shadow: 0px 1px 0px rgba(128, 128, 128, 0.35);

}
.onoff input:checked + label:before {
  left: calc(4.2em - 3px);
}

.onoff.en label:after {
  content: 'Hidden';
}

.onoff.en input:checked + label:after {
  content: 'Visible';
}

.onoff.fr label:after {
  content: 'Cach√©';
}

.onoff.fr input:checked + label:after {
  content: 'Visible';
}

// ---------------------------------------------------------------- new visibility
.visibility-radios {
  box-sizing: border-box;
  display: inline-block;

  label {
    padding: 0.05em 0.2em;
    display: inline-block;
    margin-right: 0;
    cursor: pointer;
    border-bottom: 2px solid #fff;
    border-radius: 15%;
    span {
      transition: transform .2s ease-in-out;
    }
    span:hover {
      top: -0.5ex;
      transform: scale(1.25);
      color: var(--red);
    }
  }
  input[type="radio"] {
    display: none;
  }
  input[type="radio"]:checked + label {
    box-shadow: inset 0 0 2px #666;
    border-bottom: 2px solid var(--red);
    span {
      color: var(--red-dark);
    }
  }
}

